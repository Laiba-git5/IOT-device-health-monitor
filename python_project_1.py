# -*- coding: utf-8 -*-
"""Python Project 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1dvCWcg4fC2JCZVwkPYPQiLTw0xVzJj17
"""

n = int(input("Enter number of devices: "))
devices = []
for i in range(n):
    name = input(f"Enter name of device {i+1}: ")
    battery = int(input(f"Enter battery % of {name}: "))
    signal = int(input(f"Enter signal strength (negative dBm) of {name}: "))
    packet_loss = int(input(f"Enter packet loss % of {name}: "))
    devices.append({"name": name, "battery": battery, "signal": signal, "packet_loss": packet_loss})


from functools import reduce
from collections import defaultdict

filtered_devices = list(filter(lambda d: d['battery'] < 25 or d['signal'] < -85 or d['packet_loss'] > 30, devices))
mapped_devices= list(map(lambda x: (x['name'],
                         "critical" if x['battery']< 25 or x['signal'] < -85 or x['packet_loss'] > 30
                         else "warning" if x['battery']< 40 or x['signal'] < -80 or x['packet_loss'] > 20
                         else "healthy"), devices))

average_devices=reduce(lambda a,b: a+b['packet_loss'],devices,0)/len(devices)

# 4) Grouping devices by status
grouped = defaultdict(list)
for name, status in mapped_devices:
    grouped[status].append(name)


print("\n Device Health Monitoring Report \n")

print("Filtered Devices (critical conditions):")
for d in filtered_devices:
    print(f"{d['name']} | Battery: {d['battery']}% | Signal: {d['signal']} dBm | Packet Loss: {d['packet_loss']}%")

print("\n Status of All Devices:")
for name, status in mapped_devices:
    print(f"{name} â†’ {status.upper()}")

print(f"\n Average Packet Loss: {average_devices:.2f}%")

print("\n Grouped Devices by Status:")
for status, names in grouped.items():
    print(f"{status.upper()}: {', '.join(names)}")